plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.openapi.generator' version '5.2.0'
}

repositories {
    mavenCentral()
}

group = 'org.opendatadiscovery'
version = file('VERSION').text

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

ext {
    swagger_annotations_version = "1.6.2"
    spring_web_version = "2.4.3"
    jackson_version = "2.11.3"
    jackson_databind_version = "2.11.3"
    jackson_databind_nullable_version = "0.2.1"
    jakarta_annotation_version = "1.3.5"
    reactor_version = "3.4.3"
    reactor_netty_version = "0.7.15.RELEASE"
    jodatime_version = "2.9.9"
    junit_version = "4.13.1"
}

dependencies {
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "io.projectreactor:reactor-core:$reactor_version"
    implementation "org.springframework.boot:spring-boot-starter-webflux:$spring_web_version"
    implementation "io.projectreactor.ipc:reactor-netty:$reactor_netty_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_databind_version"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    implementation "org.openapitools:jackson-databind-nullable:$jackson_databind_nullable_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    implementation "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
    testImplementation "junit:junit:$junit_version"

}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}

openApiGenerate {
    generatorName = "java"

    inputSpec = "$projectDir/../opendatadiscovery-specification/specification/odd_api.yaml"
    outputDir = "$buildDir/generated"

    apiPackage = "org.opendatadiscovery.client.api"
    invokerPackage = "org.opendatadiscovery.client"
    modelPackage = "org.opendatadiscovery.client.model"

    configOptions = [
            dateLibrary: "java8",
            library    : "webclient"
    ]

    globalProperties = [
            supportingFiles: "",
            models         : "",
            apis           : ""
    ]
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar, javadocJar
}

signing {
    sign(publishing.publications)
}

publishing {
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }

    publications {
        contract(MavenPublication) {
            groupId = 'org.opendatadiscovery'
            artifactId = 'odd-platform-adapter-client'
            version = version

            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }

            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            pom {
                name = 'ODD Platform Ingestion Contract'
                description = 'ODD Platform Java package with OpenDataDiscovery models and APIs'
                url = 'https://github.com/opendatadiscovery/odd-platform-ingestion-contract'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'ndementev'
                        name = 'Nikita Dementev'
                        organization = 'opendatadiscovery.org'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/opendatadiscovery/odd-platform-ingestion-contract.git'
                    developerConnection = 'scm:git:git://github.com/opendatadiscovery/odd-platform-ingestion-contract.git'
                    url = 'https://github.com/opendatadiscovery/odd-platform-ingestion-contract'
                }
            }
        }
    }
}

compileJava.dependsOn tasks.openApiGenerate
publish.dependsOn tasks.compileJava