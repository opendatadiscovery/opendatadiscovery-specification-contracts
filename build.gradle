plugins {
    id 'org.openapi.generator' version '5.2.0' apply false
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

ext {
    env = findProperty('env') ?: 'dev'
}

group = 'org.opendatadiscovery'
def packageVersion = file('VERSION').text

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'org.openapi.generator'

    group = 'org.opendatadiscovery'
    version = packageVersion

    repositories {
        mavenCentral()
        mavenLocal()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            java {
                srcDir "$buildDir/generated/src/main/java"
            }
        }
    }

    task sourceJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier "javadoc"
        from javadoc.destinationDir
    }

    artifacts {
        archives sourceJar, javadocJar
    }

    if (env == 'prod') {
        signing {
            sign(publishing.publications)
        }
    }

    publishing {
        if (env == 'prod') {
            repositories {
                maven {
                    url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                    credentials {
                        username sonatypeUsername
                        password sonatypePassword
                    }
                }
            }
        }

        publications {
            maven(MavenPublication) {
                groupId = group
                version = version

                from components.java

                artifact(sourceJar) {
                    classifier = 'sources'
                }

                artifact(javadocJar) {
                    classifier = 'javadoc'
                }

                pom {
                    url = 'https://github.com/opendatadiscovery/opendatadiscovery-specification-contracts'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'ndementev'
                            name = 'Nikita Dementev'
                            organization = 'opendatadiscovery.org'
                        }
                        developer {
                            id = 'gosin'
                            name = 'German Osin'
                            organization = 'opendatadiscovery.org'
                        }
                    }

                    scm {
                        connection = 'scm:git:git://github.com/opendatadiscovery/opendatadiscovery-specification-contracts.git'
                        developerConnection = 'scm:git:git://github.com/opendatadiscovery/opendatadiscovery-specification-contracts.git'
                        url = 'https://github.com/opendatadiscovery/opendatadiscovery-specification-contracts'
                    }
                }
            }
        }
    }

    compileJava.dependsOn tasks.openApiGenerate
    publish.dependsOn tasks.compileJava
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")

            username = sonatypeUsername
            password = sonatypePassword
        }
    }
}